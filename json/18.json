{"heading":"Timetabling (Work In Progress)","explains":{},"exampleDescription":"Timetabling can be difficult to wrap your head around, so when you think about a timetable of time slots, you can imagine a big collection of timeslots stretching out infinitely into the future and all you have to do is write the details into that slot. It’s not so easy to store that in a computer, since we’d need an infinite amount of storage, and an infinite amount of time to generate all of the slots. Instead we can represent this in a less obvious way. We can represent filled time slots using a record in our timeslot table, with a start and an end time; and then to represent unfilled slots we will have nothing, so no information about this time slot, not even that the time slot exists. This means that the timetable (timeslot table) will look like a collection of filled timeslots. When we want to check if a timeslot is available we could use sql to find if there is any appointment that clashes with it, which is if it meets the criteria (StartTimeA < EndTimeB) and (EndTimeA > StartTimeB) To make sure that timeslots line up one after the other, you should make the user interface only give the user a set of timeslot options, where a timeslot option starts where another one ends. By doing this, your program will fill timeslots that match up consecutively. You can also give the user a way to change how the user interface displays timeslots","example":""}

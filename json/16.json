{"heading":"Creating Forms for a table","explains":{},"exampleDescription":"Most tables will need forms to add new information to them. This could be, for example, a table storing information about pupils. In this situation the form would allow you to enter details about a newly enrolled pupil, so you should have some way of entering each of these details. Check out the example below, where the Pupil form correlates to the table that it adds data to: <br> <br> <img src=\"images/tutorials/Form1.jpeg\" style=\"width:550px\"> <br> <br> <img src=\"images/tutorials/Form2.jpeg\" style=\"width:550px\"> <br> <br> So in general, for each column in the table you should have some way for the user to input this. You can then add this information to the table when the user clicks the “Done” button using an INSERT query. So for this example: <br> <br> <img src=\"images/tutorials/Form3.jpeg\" style=\"width:550px\"> <br> <br> And when the done button is clicked:","example":"SqlConnection sqlConnection = new SqlConnection();\nsqlConnection.ConnectionString = ConfigurationManager\n    .ConnectionStrings[\"TestConnection.Properties.Settings.SSD_ResourcesConnectionString\"].ConnectionString;\n\nSqlCommand sqlCommand = new SqlCommand(\"INSERT INTO dbo.[Pupil] VALUES (@Name, @Date_of_birth, @Telephone_number)\", sqlConnection);\n\nsqlCommand.Parameters.AddWithValue(\"@Name\", DOBDatePicker.Value);\nsqlCommand.Parameters.AddWithValue(\"@Date_of_birth\", DOBDatePicker.Value);\nsqlCommand.Parameters.AddWithValue(\"@Telephone_number\", DOBDatePicker.Value);\n\nsqlConnection.Open();\nsqlCommand.ExecuteNonQuery(); // Executes the INSERT command\nsqlConnection.Close();","extra":"Remember, the IDENTITY property of the ID column means that we don't need to give it a value, it will be generated by the autonumbering"}
